name: Docker build-push-deploy
on:
  push:
    branches: [ "master" ]
env:
  AWS_REGION: "us-east-1"
jobs:
  build:
    name: build and push
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "my-repo"
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG_LATEST: "latest"
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG_LATEST
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@v1.0.0
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: "my-repo"
        IMAGE_TAG: ${{ github.sha }}
        IMAGE_TAG_LATEST: "latest"
      with:
        host: 52.71.100.103 #${{ secrets.HOST }}
        username: ubuntu #${{ secrets.USERNAME }}
        key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        port: 22 #${{ secrets.PORT }}
        script: |
          sudo docker stop my-container || true
          sudo docker rm my-container || true
          sudo docker pull 315809974489.dkr.ecr.us-east-1.amazonaws.com/my-repo:latest
          sudo sudo docker run -d --name my-container -p 80:3000 315809974489.dkr.ecr.us-east-1.amazonaws.com/my-repo:latest
